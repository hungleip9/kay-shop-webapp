{"remainingRequest":"/home/hunglq/Documents/kay-shop-webapp/node_modules/babel-loader/lib/index.js!/home/hunglq/Documents/kay-shop-webapp/node_modules/eslint-loader/index.js??ref--13-0!/home/hunglq/Documents/kay-shop-webapp/src/utils/helper.js","dependencies":[{"path":"/home/hunglq/Documents/kay-shop-webapp/src/utils/helper.js","mtime":1617876803307},{"path":"/home/hunglq/Documents/kay-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/Documents/kay-shop-webapp/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/hunglq/Documents/kay-shop-webapp/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCB7IFZBTElEQVRFX0VNQUlMX1JFR0VYLCBWQUxJREFURV9QSE9ORV9SRUdFWF9SVUxFIH0gZnJvbSAiLi9jb25zdGFudHMiOwppbXBvcnQgbW9tZW50IGZyb20gIm1vbWVudCI7CmV4cG9ydCB2YXIgaXNWYWxpZEVtYWlsID0gZnVuY3Rpb24gaXNWYWxpZEVtYWlsKGVtYWlsKSB7CiAgdmFyIHJlc3VsdCA9IGZhbHNlOwoKICBpZiAoZW1haWwgJiYgdHlwZW9mIGVtYWlsID09PSAnc3RyaW5nJykgewogICAgdmFyIHJlZ2V4ID0gUmVnRXhwKFZBTElEQVRFX0VNQUlMX1JFR0VYKTsKICAgIHJlc3VsdCA9IHJlZ2V4LnRlc3QoZW1haWwudHJpbSgpKTsKICB9CgogIHJldHVybiByZXN1bHQ7Cn07CmV4cG9ydCB2YXIgaXNWYWxpZFBob25lID0gZnVuY3Rpb24gaXNWYWxpZFBob25lKHBob25lKSB7CiAgdmFyIHJlc3VsdCA9IGZhbHNlOwoKICBpZiAocGhvbmUgJiYgdHlwZW9mIHBob25lID09PSAnc3RyaW5nJykgewogICAgdmFyIHRyaW1QaG9uZSA9IHBob25lLnRyaW0oKTsKCiAgICBpZiAodHJpbVBob25lKSB7CiAgICAgIHZhciByZWdleFJ1bGUgPSBSZWdFeHAoVkFMSURBVEVfUEhPTkVfUkVHRVhfUlVMRSk7CiAgICAgIHZhciBydWxlTWF0Y2hzID0gdHJpbVBob25lLm1hdGNoKHJlZ2V4UnVsZSk7CgogICAgICBpZiAocnVsZU1hdGNocyAmJiBydWxlTWF0Y2hzLmxlbmd0aCA+IDApIHsKICAgICAgICByZXN1bHQgPSBydWxlTWF0Y2hzWzBdID09PSB0cmltUGhvbmU7CiAgICAgIH0KICAgIH0KICB9CgogIHJldHVybiByZXN1bHQ7Cn07CmV4cG9ydCB2YXIgZm9ybWF0RGF0ZSA9IGZ1bmN0aW9uIGZvcm1hdERhdGUoc3RyaW5nRGF0ZSkgewogIHJldHVybiBtb21lbnQoc3RyaW5nRGF0ZSkuZm9ybWF0KCdISDptbSBERC9NTS9ZWVlZJyk7Cn07CmV4cG9ydCB2YXIgZm9ybWF0TnVtYmVyID0gZnVuY3Rpb24gZm9ybWF0TnVtYmVyKG51bWJlcikgewogIHJldHVybiBuZXcgSW50bC5OdW1iZXJGb3JtYXQoKS5mb3JtYXQobnVtYmVyKTsKfTsKZXhwb3J0IHZhciBmb3JtYXRUaW1lRnJvbSA9IGZ1bmN0aW9uIGZvcm1hdFRpbWVGcm9tKHN0cmluZ0RhdGUpIHsKICBtb21lbnQubG9jYWxlKCd2aScpOwogIHJldHVybiBtb21lbnQoc3RyaW5nRGF0ZSkuZnJvbU5vdygpOwp9OwpleHBvcnQgdmFyIGZvcm1hdE1vbmV5ID0gZnVuY3Rpb24gZm9ybWF0TW9uZXkocHJpY2UpIHsKICByZXR1cm4gcHJpY2UucmVwbGFjZSgvXEQvZywgIiIpLnJlcGxhY2UoL1xCKD89KFxkezN9KSsoPyFcZCkpL2csICIsIik7Cn07CmV4cG9ydCB2YXIgZm9ybWF0U3RyaW5ndG9OdW1iZXIgPSBmdW5jdGlvbiBmb3JtYXRTdHJpbmd0b051bWJlcihzdHJpbmcpIHsKICB2YXIgcmVzdWx0ID0gc3RyaW5nOwoKICBpZiAodHlwZW9mIHN0cmluZyA9PT0gJ3N0cmluZycpIHsKICAgIHJlc3VsdCA9IE51bWJlcihzdHJpbmcucmVwbGFjZShuZXcgUmVnRXhwKCIsIiwgImdtIiksICcnKSk7CiAgfQoKICByZXR1cm4gcmVzdWx0Owp9Ow=="},{"version":3,"sources":["/home/hunglq/Documents/kay-shop-webapp/src/utils/helper.js"],"names":["VALIDATE_EMAIL_REGEX","VALIDATE_PHONE_REGEX_RULE","moment","isValidEmail","email","result","regex","RegExp","test","trim","isValidPhone","phone","trimPhone","regexRule","ruleMatchs","match","length","formatDate","stringDate","format","formatNumber","number","Intl","NumberFormat","formatTimeFrom","locale","fromNow","formatMoney","price","replace","formatStringtoNumber","string","Number"],"mappings":";;;;;;;AAAA,SAAQA,oBAAR,EAA8BC,yBAA9B,QAA8D,aAA9D;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AACrC,MAAIC,MAAM,GAAI,KAAd;;AACA,MAAID,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACtC,QAAME,KAAK,GAAGC,MAAM,CAACP,oBAAD,CAApB;AACAK,IAAAA,MAAM,GAAGC,KAAK,CAACE,IAAN,CAAWJ,KAAK,CAACK,IAAN,EAAX,CAAT;AACD;;AACD,SAAOJ,MAAP;AACD,CAPM;AAQP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AACrC,MAAIN,MAAM,GAAG,KAAb;;AACA,MAAIM,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACtC,QAAIC,SAAS,GAAGD,KAAK,CAACF,IAAN,EAAhB;;AACA,QAAIG,SAAJ,EAAe;AACb,UAAMC,SAAS,GAAGN,MAAM,CAACN,yBAAD,CAAxB;AACA,UAAIa,UAAU,GAAGF,SAAS,CAACG,KAAV,CAAgBF,SAAhB,CAAjB;;AACA,UAAIC,UAAU,IAAIA,UAAU,CAACE,MAAX,GAAoB,CAAtC,EAAyC;AACvCX,QAAAA,MAAM,GAAIS,UAAU,CAAC,CAAD,CAAV,KAAkBF,SAA5B;AACD;AACF;AACF;;AACD,SAAOP,MAAP;AACD,CAbM;AAcP,OAAO,IAAMY,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAgB;AACxC,SAAOhB,MAAM,CAACgB,UAAD,CAAN,CAAmBC,MAAnB,CAA0B,kBAA1B,CAAP;AACD,CAFM;AAGP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AACtC,SAAO,IAAIC,IAAI,CAACC,YAAT,GAAwBJ,MAAxB,CAA+BE,MAA/B,CAAP;AACD,CAFM;AAGP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACN,UAAD,EAAgB;AAC5ChB,EAAAA,MAAM,CAACuB,MAAP,CAAc,IAAd;AACA,SAAOvB,MAAM,CAACgB,UAAD,CAAN,CAAmBQ,OAAnB,EAAP;AACD,CAHM;AAIP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AACpC,SAAOA,KAAK,CAACC,OAAN,CAAc,KAAd,EAAqB,EAArB,EAAyBA,OAAzB,CAAiC,uBAAjC,EAA0D,GAA1D,CAAP;AACD,CAFM;AAGP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,MAAD,EAAY;AAC9C,MAAI1B,MAAM,GAAG0B,MAAb;;AACA,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B1B,IAAAA,MAAM,GAAG2B,MAAM,CAACD,MAAM,CAACF,OAAP,CAAe,IAAItB,MAAJ,CAAW,GAAX,EAAe,IAAf,CAAf,EAAoC,EAApC,CAAD,CAAf;AACD;;AACD,SAAOF,MAAP;AACD,CANM","sourcesContent":["import {VALIDATE_EMAIL_REGEX, VALIDATE_PHONE_REGEX_RULE} from \"./constants\";\nimport moment from \"moment\";\nexport const isValidEmail = (email) => {\n  let result =  false\n  if (email && typeof email === 'string') {\n    const regex = RegExp(VALIDATE_EMAIL_REGEX);\n    result = regex.test(email.trim())\n  }\n  return result\n}\nexport const isValidPhone = (phone) => {\n  let result = false\n  if (phone && typeof phone === 'string') {\n    let trimPhone = phone.trim()\n    if (trimPhone) {\n      const regexRule = RegExp(VALIDATE_PHONE_REGEX_RULE);\n      let ruleMatchs = trimPhone.match(regexRule);\n      if (ruleMatchs && ruleMatchs.length > 0) {\n        result = (ruleMatchs[0] === trimPhone)\n      }\n    }\n  }\n  return result\n}\nexport const formatDate = (stringDate) => {\n  return moment(stringDate).format('HH:mm DD/MM/YYYY');\n}\nexport const formatNumber = (number) => {\n  return new Intl.NumberFormat().format(number);\n}\nexport const formatTimeFrom = (stringDate) => {\n  moment.locale('vi');\n  return moment(stringDate).fromNow();\n}\nexport const formatMoney = (price) => {\n  return price.replace(/\\D/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n}\nexport const formatStringtoNumber = (string) => {\n  let result = string\n  if (typeof string === 'string') {\n    result = Number(string.replace(new RegExp(\",\",\"gm\"),''))\n  }\n  return result\n}"]}]}