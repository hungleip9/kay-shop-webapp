{"remainingRequest":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hunglq/easy-shop-webapp/src/views/Products.vue?vue&type=template&id=7177119e&scoped=true&","dependencies":[{"path":"/home/hunglq/easy-shop-webapp/src/views/Products.vue","mtime":1620027224741},{"path":"/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}