{"remainingRequest":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hunglq/easy-shop-webapp/src/views/Login.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/hunglq/easy-shop-webapp/src/views/Login.vue","mtime":1616599194858},{"path":"/home/hunglq/easy-shop-webapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICIuLi9hc3NldHMvc3R5bGVzL3ZhcmlhYmxlcyI7CgoubG9naW5Gb3JtIHsKICAgIG1heC13aWR0aDogNDAwcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgIG1hcmdpbi1sZWZ0OiBhdXRvOwogICAgbWFyZ2luLXJpZ2h0OiBhdXRvOwogICAgYmFja2dyb3VuZDogJGNvbG9yV2hpdGU7CiAgICBwYWRkaW5nOiAyNHB4OwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgIC5sb2dvIHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjRweDsKICAgICAgICBpbWcgewogICAgICAgICAgICB3aWR0aDogMjAwcHg7CiAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgICAgICAgICAgIGJvcmRlci1zdHlsZTogbm9uZTsKICAgICAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICAgICAgICB9CiAgICB9CiAgICAuaW5wdXRXcmFwIHsKICAgICAgICBtYXJnaW4tYm90dG9tOiAyNHB4OwogICAgICAgIC5lcnJvciB7CiAgICAgICAgICAgIGNvbG9yOiAkY29sb3JSZWQ7CiAgICAgICAgICAgIG1hcmdpbi10b3A6IDhweDsKICAgICAgICAgICAgZm9udC1zaXplOiAxMnB4OwogICAgICAgIH0KICAgIH0KICAgIC5sb2dpbkJ1dHRvbiB7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"loginForm\">\n        <div class=\"logo\">\n            <img src=\"../assets/images/logo_dark.png\" alt=\"\">\n        </div>\n        <div class=\"inputWrap\">\n            <el-input placeholder=\"Email\" type=\"email\" v-model=\"email\"></el-input>\n            <div v-if=\"this.errorEmail !== '' \" class=\"error\">\n                <span> {{ errorEmail }} </span>\n            </div>\n        </div>\n        <div class=\"inputWrap\">\n            <el-input  placeholder=\"Mật khẩu\" type=\"password\"  v-model=\"password\"></el-input>\n            <div v-if=\"this.errorPassword !== '' \" class=\"error\">\n                <span> {{ errorPassword }} </span>\n            </div>\n        </div>\n        <el-button type=\"primary\" class=\"loginButton\" @click=\"handleLogin()\">ĐĂNG NHẬP</el-button>\n    </div>\n</template>\n<script>\n  import { mapMutations, mapState } from 'vuex';\n  import api from '../api'\n  import {isValidEmail} from '../utils/helper'\n  import _ from 'lodash'\n  \n  export default {\n    name: \"Login\",\n    data () {\n      return {\n        errorEmail: '',\n        errorPassword: '',\n        email: '',\n        password: '',\n      }\n    },\n    computed: {\n      ...mapState('auth', ['isAuthenticated'])\n    },\n    watch: {\n      email () {\n        this.errorEmail = ''\n      },\n      password () {\n        this.errorPassword = ''\n      }\n    },\n    methods: {\n      ...mapMutations('auth', [\n        'updateLoginStatus',\n        'updateAccessToken'\n      ]),\n      handleLogin () {\n        if (this.isValidData()) {\n          let data = {\n            email: this.email,\n            password: this.password,\n          }\n          api.login(data).then((response) => {\n            this.updateAccessToken(_.get(response, 'data.access_token'))\n            this.updateLoginStatus(true)\n            this.$router.push({ name: 'Home' })\n          }).catch(() => {\n            this.$message({message: 'Thông tin tài khoản hoặc mật khẩu không chính xác', type: 'error'});\n          })\n        }\n      },\n      isValidData () {\n        let error = false;\n        this.errorEmail = '';\n        this.errorPassword = '';\n\n        if (!isValidEmail(this.email)) {\n          error = true;\n          this.errorEmail = 'Email sai định dạng, vui lòng nhập lại';\n        }\n        if (this.email.length === 0) {\n          error = true;\n          this.errorEmail = 'Email không được để trống';\n        }\n        if (this.password.length < 6) {\n          error = true;\n          this.errorPassword = 'Mật khẩu phải lớn hơn 6 ký tự';\n        }\n        if (this.password.length === 0) {\n          error = true;\n          this.errorPassword = 'Mật khẩu không được để trống';\n        }\n\n        return !error\n      }\n    },\n  }\n</script>\n<style lang=\"scss\">\n    @import \"../assets/styles/variables\";\n\n    .loginForm {\n        max-width: 400px;\n        width: 100%;\n        display: block;\n        box-sizing: border-box;\n        margin-left: auto;\n        margin-right: auto;\n        background: $colorWhite;\n        padding: 24px;\n        border-radius: 10px;\n        .logo {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-bottom: 24px;\n            img {\n                width: 200px;\n                vertical-align: middle;\n                border-style: none;\n                box-sizing: border-box;\n            }\n        }\n        .inputWrap {\n            margin-bottom: 24px;\n            .error {\n                color: $colorRed;\n                margin-top: 8px;\n                font-size: 12px;\n            }\n        }\n        .loginButton {\n            width: 100%;\n        }\n    }\n</style>"]}]}