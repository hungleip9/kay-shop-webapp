{"remainingRequest":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hunglq/easy-shop-webapp/src/views/CartNew.vue?vue&type=style&index=0&id=c80aedd4&scoped=true&lang=scss&","dependencies":[{"path":"/home/hunglq/easy-shop-webapp/src/views/CartNew.vue","mtime":1618796890213},{"path":"/home/hunglq/easy-shop-webapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uL2Fzc2V0cy9zdHlsZXMvY2FydCI7Cg=="},{"version":3,"sources":["CartNew.vue"],"names":[],"mappingsyoBA","file":"CartNew.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"cart\">\n    <div class=\"cart-container\">\n      <el-row class=\"cart-row-1\">\n        <el-col class=\"layout-left\" :sm=\"17\">\n          <div class=\"order-container\">\n            <div class=\"order\">\n              <el-table\n                :show-header=\"false\"\n                :data=\"ListsCart\"\n                style=\"width: 100%\"\n                v-loading=\"loading\"\n              >\n                <el-table-column width=\"100\" align=\"center\" label=\"Ảnh\">\n                  <template slot-scope=\"scope\">\n                    <img\n                      v-if=\"scope.row.product.image\"\n                      :src=\"baseUrl + scope.row.product.image\"\n                      alt=\"\"\n                      class=\"img-product\"\n                    />\n                    <img\n                      v-else\n                      src=\"../assets/images/default-image.png\"\n                      alt=\"\"\n                      class=\"img-product\"\n                    />\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"SKU\">\n                  <template slot-scope=\"scope\">\n                    {{ scope.row.product.sku }}\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"Tên sản phẩm\">\n                  <template slot-scope=\"scope\">\n                    {{ scope.row.product.name }}\n                  </template>\n                </el-table-column>\n                <el-table-column width=\"100px\" prop=\"date\" label=\"Số lượng\">\n                  <template slot-scope=\"scope\">\n                    <el-input-number\n                      size=\"small\"\n                      style=\"width: 90px\"\n                      v-model=\"scope.row.quantity\"\n                      @change=\"\n                        changeQuantity(scope.row.product_id, scope.row.quantity)\n                      \"\n                      controls-position=\"right\"\n                      :min=\"1\"\n                      :max=\"scope.row.product.quantity_in_stock\"\n                    ></el-input-number>\n                  </template>\n                </el-table-column>\n                <el-table-column\n                  min-width=\"120px\"\n                  align=\"right\"\n                  label=\"Giá bán\"\n                >\n                  <template slot-scope=\"scope\">\n                    {{ formatMoney(scope.row.product.sale_price) }}\n                  </template>\n                </el-table-column>\n                <el-table-column\n                  min-width=\"120px\"\n                  align=\"right\"\n                  label=\"Tổng cộng\"\n                >\n                  <template slot-scope=\"scope\">\n                    {{\n                      formatMoney(\n                        scope.row.product.sale_price * scope.row.quantity\n                      )\n                    }}\n                  </template>\n                </el-table-column>\n                <el-table-column label=\"Hành động\" align=\"center\" width=\"70px\">\n                  <template slot-scope=\"scope\">\n                    <el-button\n                      @click=\"deleteCart(scope.row._id)\"\n                      size=\"mini\"\n                      type=\"danger\"\n                      plain\n                      ><i class=\"fa fa-trash-o\"></i\n                    ></el-button>\n                  </template>\n                </el-table-column>\n              </el-table>\n            </div>\n          </div>\n          <div class=\"cart-row-container\">\n            <div class=\"cart-row\">\n              <div>\n                <el-row class=\"header-product\">\n                  <el-col :md=\"12\" class=\"search-product\">\n                    <el-input\n                      size=\"small\"\n                      placeholder=\"Tìm mặt hàng\"\n                      clearable\n                      @clear=\"handleSearch\"\n                      @keydown.enter.native=\"handleSearch\"\n                      prefix-icon=\"fa fa-search\"\n                      v-model=\"searchProduct\"\n                    >\n                    </el-input>\n                    <el-button size=\"small\" @click=\"handleSearch\"\n                      >Tìm kiếm</el-button\n                    >\n                  </el-col>\n                  <el-col :md=\"12\" class=\"page\">\n                    <el-pagination\n                      background\n                      layout=\"prev, pager, next\"\n                      :page-size=\"20\"\n                      :total=\"total\"\n                      @current-change=\"handleCurrentChange\"\n                    >\n                    </el-pagination>\n                  </el-col>\n                </el-row>\n                <div v-if=\"cartsData && cartsData.length\" class=\"content-product\">\n                  <div\n                    v-for=\"cartdt in cartsData\"\n                    :key=\"cartdt._id\"\n                    @click=\"addCart(cartdt._id)\"\n                    class=\"content-row\"\n                  >\n                    <div class=\"product-image\">\n                      <img\n                        v-if=\"cartdt.image\"\n                        style=\"width: 100%\"\n                        :src=\"baseUrl + cartdt.image\"\n                      />\n                      <img\n                        v-else\n                        style=\"width: 100%\"\n                        src=\"../assets/images/default-image.png\"\n                        alt=\"\"\n                      />\n                      <span class=\"product-money\">{{\n                        formatMoney(cartdt.sale_price)\n                      }}</span>\n                      <span\n                        v-show=\"!cartdt.quantity_in_stock\"\n                        class=\"product-status\"\n                        >Hết hàng</span\n                      >\n                    </div>\n                    <p class=\"text-sku\">{{ cartdt.sku }}</p>\n                    <p class=\"text-product\">{{ cartdt.name }}</p>\n                  </div>\n                </div>\n                <div v-else class=\"text-list-product\">\n                  <span>Không tìm thấy sản phẩm</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </el-col>\n        <el-col class=\"layout-right\" :sm=\"7\">\n          <div class=\"total-value\">\n            <div class=\"form-cart-container\">\n                <div class=\"form-cart-chill\">\n                    <el-autocomplete\n                        v-if=\"checkUser\"\n                        class=\"user\"\n                        prefix-icon=\"fa fa-search\"\n                        v-model=\"searchUsers\"\n                        :fetch-suggestions=\"querySearchAsync\"\n                        placeholder=\"Tìm kiếm khách hàng\"\n                        @select=\"handleSelect\"\n                        size=\"small\"\n                    >\n                        <template slot-scope=\"{ item }\">\n                        <div class=\"name\">{{ item.name }}</div>\n                        </template>\n                        <el-button\n                        @click=\"dialogUser = true\"\n                        slot=\"append\"\n                        icon=\"fa fa-plus\"\n                        ></el-button>\n                    </el-autocomplete>\n                    <div v-else class=\"user\">\n                        <div class=\"user-name\">\n                        <div class=\"user-name-icon\">\n                            <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\n                            <span>{{ dataUser.name }}</span>\n                        </div>\n                        <i\n                            @click=\"actionUserExit()\"\n                            class=\"fa fa-times-circle-o close-user\"\n                            aria-hidden=\"true\"\n                        ></i>\n                        </div>\n                    </div>\n                    <div v-if=\"!checkUser\">\n                        <el-form\n                        class=\"form-cart\"\n                        :model=\"formCart\"\n                        :rules=\"rulesCart\"\n                        ref=\"form\"\n                        >\n                            <span class=\"input-label\"\n                            >Tên người nhận <span>*</span>\n                            </span>\n                        <el-form-item prop=\"nameCart\">\n                            <el-input\n                            size=\"small\"\n                            placeholder=\"Nhập tên người nhận\"\n                            v-model=\"formCart.nameCart\"\n                            >\n                            </el-input>\n                        </el-form-item>\n                        <span class=\"input-label\">\n                            Số điện thoại <span>*</span>\n                            </span>\n                        <el-form-item prop=\"phoneCart\">\n                            <el-input\n                            size=\"small\"\n                            placeholder=\"Nhập số điện thoại\"\n                            v-model=\"formCart.phoneCart\"\n                            >\n                            </el-input>\n                        </el-form-item>\n                        <span class=\"input-label\">\n                            Địa chỉ giao hàng <span>*</span>\n                            </span>\n                        <el-form-item prop=\"addressCart\">\n                            <el-input\n                            placeholder=\"Nhập địa chỉ\"\n                            type=\"textarea\"\n                            :autosize=\"{ minRows: 1.5 }\"\n                            v-model=\"formCart.addressCart\"\n                            >\n                            </el-input>\n                        </el-form-item>\n                        <span class=\"input-label\"> Phí vận chuyển </span>\n                        <el-form-item prop=\"payCart\">\n                            <el-input\n                            size=\"small\"\n                            autocomplete=\"off\"\n                            type=\"text\"\n                            :min=\"0\"\n                            @input=\"formatPayCart\"\n                            @focus=\"$event.target.select()\"\n                            placeholder=\"Nhập phí vận chuyển\"\n                            v-model=\"formCart.payCart\"\n                            >\n                            <template slot=\"append\">VNĐ</template>\n                            </el-input>\n                        </el-form-item>\n                        <span class=\"input-label\"> Ghi chú </span>\n                        <el-form-item prop=\"noteCart\">\n                            <el-input\n                            type=\"textarea\"\n                            :autosize=\"{ minRows: 1.5 }\"\n                            placeholder=\"Ghi chú\"\n                            v-model=\"formCart.noteCart\"\n                            >\n                            </el-input>\n                        </el-form-item>\n                        </el-form>\n                    </div>\n                </div>\n            \n            </div>\n            <div class=\"order-bottom\">\n              <p class=\"sum-money\">\n                Tổng tiền: <span>{{ formatMoney(sumMoneyData) }} VNĐ</span>\n              </p>\n              <div class=\"order-add\">\n                <el-button\n                  style=\"width: 100%\"\n                  type=\"success\"\n                  @click=\"addOrder('form')\"\n                  ><i class=\"fa fa-plane\"></i> Tạo đơn hàng</el-button\n                >\n              </div>\n            </div>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <!-- add new user -->\n    <el-dialog\n      title=\"Thêm khách hàng\"\n      id=\"add-user-cart\"\n      top=\"5vh\"\n      :visible.sync=\"dialogUser\"\n      :before-close=\"closeAddUser\"\n    >\n      <el-form\n        class=\"form-user\"\n        :model=\"form\"\n        ref=\"form\"\n        label-position=\"top\"\n      >\n        <el-form-item prop=\"name\">\n          <label class=\"label-user\"\n            >Tên khách hàng <span class=\"color-vali\">*</span></label\n          >\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n          <div v-if=\"this.errorName !== ''\" class=\"error\">\n            <span> {{ errorName }} </span>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"phone\">\n          <label class=\"label-user\"\n            >Điện thoại <span class=\"color-vali\">*</span></label\n          >\n          <el-input\n            type=\"text\"\n            v-model=\"form.phone\"\n            autocomplete=\"off\"\n          ></el-input>\n          <div v-if=\"this.errorPhone !== ''\" class=\"error\">\n            <span> {{ errorPhone }} </span>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"email\">\n          <label class=\"label-user\">Email</label>\n          <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\n          <div v-if=\"this.errorEmail !== ''\" class=\"error\">\n            <span> {{ errorEmail }} </span>\n          </div>\n        </el-form-item>\n        <el-form-item prop=\"address\">\n          <label class=\"label-user\">Địa chỉ</label>\n          <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"closeAddUser\">Hủy</el-button>\n        <el-button type=\"primary\" @click=\"addUser()\">Lưu</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport api from \"../api\";\nimport _ from \"lodash\";\nimport { mapMutations } from \"vuex\";\nimport { formatMoney } from \"@/utils/helper\";\nimport { isValidEmail, isValidPhone } from \"../utils/helper\";\n\nexport default {\n  name: \"Cart\",\n  components: {},\n  data() {\n    return {\n      cartsData: [],\n      ListsCart: [],\n      dataUser: [],\n      timeout: null,\n      sumMoneyData: 0,\n      searchUsers: \"\",\n      dialogUser: false,\n      searchProduct: \"\",\n      errorName: \"\",\n      errorPhone: \"\",\n      errorEmail: \"\",\n      form: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        address: \"\",\n      },\n      checkUser: true,\n      baseUrl: process.env.VUE_APP_BASE_URL + \"/storage/\",\n      total: 0,\n      currentPage: 1,\n      item: [],\n      formCart: {\n        addressCart: \"\",\n        nameCart: \"\",\n        phoneCart: \"\",\n        payCart: 0,\n        noteCart: \"\",\n      },\n      rulesCart: {\n        nameCart: [\n          {\n            required: true,\n            message: \"Tên người nhận không được để trống\",\n            trigger: \"blur\",\n          },\n        ],\n        phoneCart: [\n          {\n            required: true,\n            message: \"Số điện thoại không được để trống\",\n            trigger: \"blur\",\n          },\n          {\n            min: 10,\n            max: 11,\n            message: \"Số điện thoại không đúng\",\n            trigger: \"blur\",\n          },\n        ],\n        addressCart: [\n          {\n            required: true,\n            message: \"Địa chỉ giao hàng không được để trống\",\n            trigger: \"blur\",\n          },\n        ],\n      },\n      loading: false\n    };\n  },\n  methods: {\n    ...mapMutations([\"updateTitle\", \"sumCart\", \"updateSideBar\"]),\n    changePageTitle() {\n      this.updateTitle(\"Bán hàng\");\n    },\n    changeIndexSidebar() {\n      this.updateSideBar(\"0\");\n    },\n    querySearchAsync(queryString, cb) {\n      api.getDataCustomer({ q: queryString }).then((response) => {\n        let newCustomers = _.get(response, \"data.data.data\");\n        cb(newCustomers);\n      });\n\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {}, 500);\n    },\n    handleSelect(item) {\n      this.dataUser = item;\n      this.checkUser = false;\n      this.formCart.addressCart = item.address;\n      this.formCart.nameCart = item.name;\n      this.formCart.phoneCart = item.phone;\n    },\n    actionUserExit() {\n      this.checkUser = true;\n      this.dataUser = \"\";\n      this.formCart.addressCart = \"\";\n      this.formCart.nameCart = \"\";\n      this.formCart.phoneCart = \"\";\n    },\n    formatPayCart() {\n      if (this.formCart.payCart) {\n        this.formCart.payCart = formatMoney(this.formCart.payCart);\n      }\n    },\n    closeAddUser() {\n      this.reload()\n      this.dialogUser = false;\n    },\n    addUser() {\n      if (this.isValidData()) {\n        let data = {\n          name: this.form.name,\n          phone: this.form.phone,\n          email: this.form.email,\n          address: this.form.address,\n        };\n        api.addNewCustomer(data).then(() => {\n          this.dialogUser = false;\n          api.getDataCustomer().then((response) => {\n            this.handleSelect(_.get(response, \"data.data.data[0]\"));\n          });\n          this.$message({\n            message: \"Thêm mới khách hàng thành công!\",\n            type: \"success\",\n          });\n        });\n      }\n    },\n    formatMoney(data) {\n      return data.toLocaleString(\"vi-VN\");\n    },\n    deleteCart(id) {\n      api\n        .deleteCart(id)\n        .then(() => {\n          this.getCarts();\n        })\n        .catch(() => {\n          this.$message({\n            message: \"Xóa sản phẩm thất bại!\",\n            type: \"error\",\n          });\n        });\n    },\n    handleCurrentChange(page) {\n      this.currentPage = page;\n      let params = {\n        page: page,\n        q: this.searchProduct,\n      };\n      api.getDataProducts(params).then((response) => {\n        this.cartsData = _.get(response, \"data.data.data\");\n      });\n    },\n    handleSearch() {\n      let params = {\n        q: this.searchProduct,\n      };\n      api.getDataProducts(params).then((response) => {\n        this.cartsData = _.get(response, \"data.data.data\");\n        this.total = _.get(response, \"data.data.total\");\n        this.currentPage = _.get(response, \"data.data.current_page\");\n      });\n    },\n    changeQuantity(id, value) {\n      let data = {\n        quantity: value,\n      };\n      api.addUpdateCart(id, data).then(() => {\n        this.getCarts();\n      });\n    },\n    addCart(id) {\n      api\n        .addCart(id)\n        .then(() => {\n          this.getCarts();\n        })\n        .catch(() => {\n          this.$message({\n            message: \"Số lượng trong kho không đủ\",\n            type: \"error\",\n          });\n        });\n    },\n    addOrder(formName) {\n      if (this.ListsCart.length) {\n        if (this.dataUser) {\n          this.$refs[formName].validate((valid) => {\n            if (valid) {\n              let data = {\n                customer_id: this.dataUser._id,\n                note: this.formCart.noteCart,\n                delivery_address: this.formCart.addressCart,\n                receiver: this.formCart.nameCart,\n                receiver_phone: this.formCart.phoneCart,\n                transport_fee: this.formCart.payCart,\n              };\n              api\n                .storeOrder(data)\n                .then(() => {\n                  this.getCarts();\n                  this.dataUser = \"\";\n                  this.checkUser = true;\n                  this.formCart.noteCart = \"\";\n                  this.formCart.addressCart = \"\";\n                  this.formCart.nameCart = \"\";\n                  this.formCart.phoneCart = \"\";\n                  this.formCart.payCart = \"\";\n                  this.getProducts();\n                  this.$message({\n                    message: \"Đặt hàng thành công!\",\n                    type: \"success\",\n                  });\n                })\n                .catch((error) => {\n                  this.$message({\n                    message: \"Lỗi: \" + error,\n                    type: \"error\",\n                  });\n                });\n            } else {\n              return false;\n            }\n          });\n        } else {\n          this.$message({\n            message: \"Vui lòng chọn khách hàng!\",\n            type: \"error\",\n          });\n        }\n      } else {\n        this.$message({\n          message: \"Bạn chưa thêm sản phẩm vào giỏ!\",\n          type: \"error\",\n        });\n      }\n    },\n    getCarts() {\n        this.loading = true\n      api.getDataCarts().then((response) => {\n        this.ListsCart = _.get(response, \"data.data\");\n        this.sumMoneyData = 0;\n        _.get(response, \"data.data\").map(\n          (x) => (this.sumMoneyData += x.quantity * x.product.sale_price)\n        );\n        this.sumCart(_.get(response, \"data.data\").length);\n        this.loading = false\n      });\n    },\n    getProducts() {\n      api.getDataProducts().then((response) => {\n        this.cartsData = _.get(response, \"data.data.data\");\n        this.total = _.get(response, \"data.data.total\");\n        this.currentPage = _.get(response, \"data.data.current_page\");\n      });\n    },\n    isValidData() {\n      let error = false;\n      this.errorName = \"\";\n      this.errorPhone = \"\";\n      this.errorEmail = \"\";\n      if (this.form.email) {\n        if (!isValidEmail(this.form.email)) {\n          error = true;\n          this.errorEmail = \"Email sai định dạng, vui lòng nhập lại\";\n        }\n      }\n      if (this.form.name.length === 0) {\n        error = true;\n        this.errorName = \"Tên không được để trống\";\n      }\n      if (!isValidPhone(this.form.phone)) {\n        error = true;\n        this.errorPhone = \"Số điện thoại sai định dạng, vui lòng nhập lại\";\n      }\n\n      return !error;\n    },\n    reload() {\n      this.errorName = \"\";\n      this.errorPhone = \"\";\n      this.errorEmail = \"\";\n    }\n  },\n  watch: {\n    dialogUser(value) {\n      if (!value) {\n        this.$refs.form.resetFields();\n      }\n    },\n  },\n  mounted() {\n    this.dataUser = \"\";\n    this.changePageTitle();\n    this.getProducts();\n    this.getCarts();\n    this.updateSideBar();\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n@import \"../assets/styles/cart\";\n</style>\n"]}]}