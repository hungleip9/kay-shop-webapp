{"remainingRequest":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hunglq/easy-shop-webapp/src/views/Category.vue?vue&type=style&index=0&id=4d5aa038&lang=scss&scoped=true&","dependencies":[{"path":"/home/hunglq/easy-shop-webapp/src/views/Category.vue","mtime":1617329595972},{"path":"/home/hunglq/easy-shop-webapp/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIi4uL2Fzc2V0cy9zdHlsZXMvdmFyaWFibGVzIjsKQGltcG9ydCAiLi4vYXNzZXRzL3N0eWxlcy9jYXRlZ29yaWVzLnNjc3MiOwo="},{"version":3,"sources":["Category.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6SA;AACA","file":"Category.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"categories\">\n    <el-card>\n      <div class=\"head-category\">\n        <div class=\"search\">\n          <el-input class=\"search-input\" placeholder=\"Nhập tên nhóm sản phẩm để tìm kiếm\" v-model=\"search\" @keydown.enter.native=\"handleSearch\"></el-input>\n          <el-button @click=\"handleSearch\">Tìm kiếm</el-button>\n        </div>\n        <div>\n          <el-button class=\"show-card\" type=\"primary\" @click=\"dialogAddCategory = true\"><i class=\"fa fa-plus\"></i> Thêm mới</el-button>\n        </div>\n      </div>\n    </el-card>\n    <el-card class=\"table-category\">\n      <el-table\n          :data=\"categories\"\n          stripe\n          style=\"width: 100%\">\n        <el-table-column\n            width=\"300px\"\n            prop=\"name\"\n            label=\"Tên nhóm sản phẩm\">\n        </el-table-column>\n        <el-table-column\n            prop=\"description\"\n            label=\"Mô tả\">\n        </el-table-column>\n        <el-table-column\n            width=\"100px\"\n            align=\"center\"\n            label=\"Hành động\">\n          <template slot-scope=\"scope\">\n            <el-popover\n                placement=\"bottom\"\n                width=\"100\"\n                trigger=\"click\"\n                >\n              <div class=\"product-action\" @click=\"editCategory(scope.row)\"><i class=\"fa fa-pencil\"></i> Chỉnh sửa</div>\n              <div class=\"product-action\" @click=\"handleDeleteCategory(scope.row._id)\"><i class=\"fa fa-trash\"></i> Xóa</div>\n              <div class=\"btn-edit\" slot=\"reference\"><i class=\"fa fa-ellipsis-v\"></i></div>\n            </el-popover>\n          </template>\n        </el-table-column>\n      </el-table>\n      <div class=\"page\">\n            <el-pagination\n            background\n            layout=\"prev, pager, next\"\n            :page-size=\"10\"\n            :total=\"total\"\n            :current-page=\"currentPage\"\n            @current-change=\"handleChangePage\">\n            </el-pagination>\n        </div>\n    </el-card>\n\n    <!-- add category -->\n    <el-dialog class=\"dialog-add-category\" width=\"500px\" title=\"Thêm nhóm sản phẩm\" :visible.sync=\"dialogAddCategory\">\n      <el-row>\n        <el-col :span=\"24\">\n          <el-form class=\"form-product\" :model=\"form\" :rules=\"rules\" ref=\"formAddCategory\" label-position=\"top\" hide-required-asterisk label-width=\"130px\" size=\"small\">\n            <el-row>\n              <el-col :span=\"24\" class=\"margin-input\">\n                <el-form-item prop=\"name\">\n                  <label class=\"label-product\">Tên nhóm sản phẩm <span class=\"required\"> *</span></label>\n                  <el-input\n                      size=\"medium\"\n                      v-model=\"form.name\"\n                      autocomplete=\"off\"\n                  ></el-input>\n                </el-form-item>\n                <el-form-item prop=\"description\">\n                  <label class=\"label-product\">Mô tả</label>\n                  <el-input\n                      size=\"medium\"\n                      v-model=\"form.description\"\n                      :autosize=\"{ minRows: 4, maxRows: 6}\"\n                      autocomplete=\"off\"\n                      type=\"textarea\"\n                  ></el-input>\n                </el-form-item>\n              </el-col>\n            </el-row>\n          </el-form>\n        </el-col>\n      </el-row>\n      <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogAddCategory = false\">Hủy</el-button>\n            <el-button type=\"primary\" :plain=\"true\" @click=\"storeCategory('formAddCategory')\"\n            >Lưu</el-button\n            >\n        </span>\n    </el-dialog>\n    <!-- edit category -->\n    <el-dialog class=\"dialog-add-category\" width=\"500px\" title=\"Sửa nhóm sản phẩm\" :visible.sync=\"dialogEditCategory\">\n      <el-row>\n        <el-col :span=\"24\">\n          <el-form class=\"form-product\" :model=\"form\" :rules=\"rules\" ref=\"formEditCategory\" label-position=\"top\" hide-required-asterisk label-width=\"130px\" size=\"small\">\n            <el-row>\n              <el-col :span=\"24\" class=\"margin-input\">\n                <el-form-item prop=\"name\">\n                  <label class=\"label-product\">Tên nhóm sản phẩm <span class=\"required\"> *</span></label>\n                  <el-input\n                      size=\"medium\"\n                      v-model=\"form.name\"\n                      autocomplete=\"off\"\n                  ></el-input>\n                </el-form-item>\n                <el-form-item prop=\"description\">\n                  <label class=\"label-product\">Mô tả</label>\n                  <el-input\n                      size=\"medium\"\n                      v-model=\"form.description\"\n                      :autosize=\"{ minRows: 4, maxRows: 6}\"\n                      autocomplete=\"off\"\n                      type=\"textarea\"\n                  ></el-input>\n                </el-form-item>\n              </el-col>\n            </el-row>\n          </el-form>\n        </el-col>\n      </el-row>\n      <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button @click=\"dialogEditCategory = false\">Hủy</el-button>\n            <el-button type=\"primary\" :plain=\"true\" @click=\"handleUpdateCategory('formEditCategory')\"\n            >Sửa</el-button\n            >\n        </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {mapMutations, } from 'vuex'\nimport api from '../api'\nexport default {\nname: \"Products\",\n  data () {\n    return {\n      categories: [],\n      search: '',\n      dialogAddCategory: false,\n      dialogEditCategory: false,\n      form: {\n        name: \"\",\n        description: \"\",\n      },\n      rules: {\n        name: [\n          { required: true, message: 'Tên nhóm sản phẩm không được bỏ trống!', trigger: 'change' },\n        ],\n      },\n      total: 0,\n      currentPage: 1,\n      categoryEditId: ''\n    }\n  },\n  methods: {\n    ...mapMutations([\n      'updateTitle'\n    ]),\n    changePageTitle() {\n      this.updateTitle('Quản lý nhóm sản phẩm')\n    },\n    storeCategory(formAddCategory) {\n      this.$refs[formAddCategory].validate((valid) => {\n        if (valid) {\n          let data = {\n            name: this.form.name,\n            description: this.form.description\n          }\n          api.addNewCategory(data).then(() => {\n            this.getData()\n            this.dialogAddCategory = false\n            this.$message({\n              message: 'Thêm mới thành công!',\n              type: 'success'\n            });\n          })\n        }\n      });\n    },\n    editCategory(category) {\n      this.dialogEditCategory = true\n      if (category) {\n        this.categoryEditId = category._id\n        this.form.name = category.name\n        this.form.description = category.description\n      }\n    },\n    handleUpdateCategory(formEditCategory) {\n      this.$refs[formEditCategory].validate((valid) => {\n        if (valid) {\n          let data = {\n            name: this.form.name,\n            description: this.form.description\n          }\n          api.upadateCategory(this.categoryEditId, data).then(() => {\n            this.dialogEditCategory = false\n            let params = {\n              page: this.currentPage,\n              q: this.search\n            }\n            api.getDataCategoriesPaginate(params).then((response) => {\n              this.categories = response.data.data.data\n            })\n            this.$message({\n              message: 'Cập nhật thành công!',\n              type: 'success'\n            });\n          }).catch(() => {\n            this.$message({\n              message: 'Cập nhật thất bại!',\n              type: 'error'\n            });\n          })\n        }\n      });\n    },\n    handleDeleteCategory(id) {\n      this.$confirm('Bạn có chắc chắn muốn xóa nhóm sản phẩm này?', 'Cảnh báo', {\n        confirmButtonText: 'Xóa',\n        cancelButtonText: 'Hủy',\n        type: 'warning'\n      }).then(() => {\n        api.deleteCategory(id).then(() => {\n          let params = {\n            page: this.currentPage,\n            q: this.search\n          }\n          api.getDataCategoriesPaginate(params).then((response) => {\n            this.categories = response.data.data.data\n          })\n          this.$message({\n            message: 'Xóa sản phẩm thành công!',\n            type: 'success'\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'error',\n            message: 'Xóa thất bại!'\n          });\n        })\n      }).catch(() => {\n\n      });\n    },\n    handleChangePage(page) {\n      this.currentPage = page\n      let params = {\n        page: page,\n        q: this.search\n      }\n      api.getDataCategoriesPaginate(params).then((response) => {\n        this.categories = response.data.data.data\n      })\n    },\n    handleSearch() {\n      let params = {\n        q: this.search\n      }\n      api.getDataCategoriesPaginate(params).then((response) => {\n        this.categories = response.data.data.data\n        this.total = response.data.data.total\n        this.currentPage = response.data.data.current_page\n      })\n    },\n    getData() {\n      api.getDataCategoriesPaginate().then((response) => {\n        this.categories = response.data.data.data\n        this.total = response.data.data.total\n        this.currentPage = response.data.data.current_page\n      })\n    }\n  },\n   watch: {\n     dialogAddCategory (value) {\n       if (!value) {\n         this.$refs.formAddCategory.resetFields();\n       } else {\n         this.form.name = ''\n         this.form.description = ''\n       }\n     },\n     dialogEditCategory(value) {\n        if (!value) {\n          if (this.$refs.formAddCategory) {\n            this.$refs.formAddCategory.resetFields();\n          }\n       }\n     }\n   },\n  mounted() {\n    this.changePageTitle()\n    this.getData()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../assets/styles/variables\";\n@import \"../assets/styles/categories.scss\";\n</style>"]}]}