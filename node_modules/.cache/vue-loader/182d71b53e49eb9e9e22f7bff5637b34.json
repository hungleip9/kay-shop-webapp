{"remainingRequest":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hunglq/easy-shop-webapp/src/views/Customer.vue?vue&type=template&id=699cf318&scoped=true&","dependencies":[{"path":"/home/hunglq/easy-shop-webapp/src/views/Customer.vue","mtime":1617329595976},{"path":"/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hunglq/easy-shop-webapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}